<%- include('../../views/partials/user/header',{user}) %>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Your Orders</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');
        body {
            font-family: 'Poppins', sans-serif;


        }

        .retry-payment-btn {
    background-color: #dc2626;
    color: white;
    font-weight: bold;
    padding: 8px 16px;
    border-radius: 4px;
    border: none;
    display: flex;
    align-items: center;
    cursor: pointer;
    transition: background-color 0.3s;
  }

  .retry-payment-btn:hover {
    background-color: #b91c1c;
  }

  .retry-payment-btn svg {
    margin-right: 8px;
  }
    </style>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
	<link href="https://cdn.jsdelivr.net/npm/@sweetalert2/theme-dark@4/dark.css" rel="stylesheet">
</head>
<body class="bg-gray-100"></body>
    <div  style="margin-top: 55px;" class="container mx-auto px-4 py-8">
        <h1 class="text-3xl font-bold mb-8">Your Orders</h1>

        <div id="refresh" class="space-y-6">
            <% if(orders && orders.length > 0) { %>
                <% orders.forEach(order => { %>
                    <div class="bg-white shadow-md rounded-lg overflow-hidden">
                        <div class="grid grid-cols-2 md:grid-cols-4 gap-4 p-4 border-b">
                            <div>
                                <p class="text-sm text-gray-600">Order Placed:</p>
                                <p class="font-semibold"><%= order.createdAt.toLocaleDateString() %></p>
                            </div>
                            <div>
                                <p class="text-sm text-gray-600">Delivery By:</p>
                                <p class="font-semibold"><%= new Date(order.createdAt.getTime() + (7 * 24 * 60 * 60 * 1000)).toLocaleDateString() %></p>
                            </div>
                            <div>
                                <p class="text-sm text-gray-600">Total:</p>
                                <p class="font-semibold"><%= order.orderTotal %></p>
                            </div>
                            <div>
                                <p class="text-sm text-gray-600">Ship To:</p>
                                <p class="font-semibold"><%= order.userId.name %></p>
                            </div>
                        </div>
                        <div class="p-4 border-b">
                            <p class="font-semibold">Order: <%= order._id %></p>
                            <a href="/orderDetails/<%= order._id %>" class="text-blue-600 hover:underline">View Order Details</a>
                        </div>
                        
                        <% order.items.forEach(item => { %>
                            <div class="p-4 flex items-center">
                                <img src="uploads/re-image/<%= item.productImage %>" alt="Img" class="w-20 h-20 object-cover mr-4">
                                <div class="flex-grow">
                                    <h3 class="font-semibold"><%= item.ProductName %></h3>
                                    <p class="text-gray-600">Price: <%= item.ProductTotal %></p>
                                </div>
                                <div class="flex items-center space-x-2">
                                    <% if(item.orderStatus == 'Pending') {%>
                                    <span class="px-2 py-1 bg-yellow-100 text-yellow-800 rounded-full text-sm">Pending</span>
                                    <% } %>
                                    <% if(item.orderStatus == 'Canceled') {%>
                                        <span class="px-2 py-1 bg-red-100 text-red-800 rounded-full text-sm">Canceled</span>
                                        <% } %>

                                        <% if(item.orderStatus == 'Shipped') {%>
                                            <span class="px-2 py-1 bg-orange-100 text-orange-800 rounded-full text-sm">Shipped</span>
                                            <% } %>
                                            <% if(item.returnRequest =="Approved") {%>
                                                <span class="px-2 py-1 bg-green-100 text-green-800 rounded-full text-sm">Return Request Accepted</span>
                                                <% } else if(item.returnRequest =="Rejected"){%>
                                                    <span class="px-2 py-1 bg-red-100 text-red-800 rounded-full text-sm">Return Request Rejected</span>
                                                    
                                            <% }else if(item.returnStatus == true) {%>
                                                <span class="px-2 py-1 bg-orange-100 text-orange-800 rounded-full text-sm">Return request sended</span>
                                                <% } else if(item.orderStatus == 'Delivered')  {%> 
                                                    <!--  -->
                                                <span class="px-2 py-1 bg-green-100 text-green-800 rounded-full text-sm">Delivered</span>
                                                <% } %>
                                    <% if(item.orderStatus !== 'Canceled' && item.orderStatus !== 'Delivered'  && item.productId){ %>

                                    <button onclick="cancel(event,'<%= order._id%>','<%=item.productId._id%>','<%=item.color%>')" class="px-3 py-1 bg-red-500 text-white rounded hover:bg-red-600 transition duration-300">Cancel</button>
                                    <button onclick="Invoice(event,'<%= order._id%>','<%=item.productId._id%>')" id="Invoice" class="px-3 py-1 bg-gray-200 text-gray-800 rounded hover:bg-gray-300 transition duration-300">Invoice</button>
                              <% } %>


                              <% if(item.orderStatus == 'Delivered'  && item.productId){ %>
                                    <% if(item.returnStatus == false){ %>
                                <button onclick="returnProduct(event,'<%= order._id%>','<%=item.productId._id%>')" class="px-3 py-1 bg-red-500 text-white rounded hover:bg-red-600 transition duration-300">Return</button>
                                <% } %>
                                <button onclick="Invoice(event,'<%= order._id%>','<%=item.productId._id%>')"  id="invoice" class="px-3 py-1 bg-gray-200 text-gray-800 rounded hover:bg-gray-300 transition duration-300">Invoice</button>
                          <% } %>
                          
                               
                                </div>
                            </div>
                        <% }) %>
                    </div>



                    <% if( order.paymentInfo.status == "Failed"){ %>
                        <p style="margin:10px">payment stauts: <span class="px-2 py-1 bg-red-100 text-red-800 rounded-full text-sm"><%= order.paymentInfo.status %></span></p>
                       <% }else if(order.paymentInfo.status =="Paid"){ %>
                        <p style="margin:10px">payment stauts: <span class="px-2 py-1 bg-green-100 text-green-800 rounded-full text-sm"><%= order.paymentInfo.status %></span></p>
                        <% } %>
                        <% if(order.paymentInfo.status == "Failed") {%>

                            <button onclick="retry(event,'<%= order.paymentInfo.paidAmount%>')" style="margin: 10px;" id="retryPaymentBtn" class="retry-payment-btn">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                  <path d="M21.5 2v6h-6M2.5 22v-6h6M2 11.5a10 10 0 0 1 18.8-4.3M22 12.5a10 10 0 0 1-18.8 4.3"/>
                                </svg>
                                <span>Retry Payment</span>
                              </button>
                            <% } %>


                <% }) %>
            <% } else { %>
                <div class="bg-white shadow-md rounded-lg p-6 text-center">
                    <p class="text-gray-600">No orders found</p>
                </div>
            <% } %>
        </div>
    </div>

    <div id="returnRequestModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
    <div class="bg-white rounded-lg p-6 w-full max-w-md">
        <h2 class="text-xl font-bold mb-4">Return Request</h2>
        
        <div class="mb-4">
            <p class="font-medium">Product: <span id="returnProductName"></span></p>
            <p class="font-medium">Order ID: <span id="returnOrderId"></span></p>
        </div>

        <div class="mb-4">
            <label class="block text-sm font-medium mb-1">Reason for Return</label>
            <select id="returnReason" class="w-full p-2 border rounded-md">
                <option value="">Select a reason</option>
                <option value="damaged">Product Damaged</option>
                <option value="wrong_item">Wrong Item Received</option>
                <option value="not_satisfied">Not Satisfied with Product</option>
                <option value="defective">Product is Defective</option>
                <option value="other">Other</option>
            </select>
        </div>

        <div class="mb-4">
            <label class="block text-sm font-medium mb-1">Additional Comments</label>
            <textarea id="returnComments" class="w-full p-2 border rounded-md" rows="3" placeholder="Optional..."></textarea>
        </div>

        <div class="flex justify-end gap-2">
            <button onclick="closeReturnModal()" class="px-4 py-2 bg-gray-200 text-gray-800 rounded-md hover:bg-gray-300">
                Cancel
            </button>
            <button onclick="submitReturnRequest()" class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700">
                Submit Return Request
            </button>
        </div>
    </div>
</div>
</body>




<%- include('../../views/partials/user/footer') %>


<script>

    function cancel(event,orderId,productId,color){

        event.preventDefault();

        Swal.fire({
            title:'Are you sure?',
        text:'the product should be remove from the order list!',
        icon:'warning',
        showConfirmButton:true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText:'Yes, remove it',

        }).then((result) =>{
            if(result.isConfirmed){{
                deleteProductAjax(orderId,productId,color);
            }}
        })

    }


    function deleteProductAjax(orderId,productId,color){

        $.ajax({
            url:`/deleteOrderListProduct/${orderId}/${productId}/${color}`,
            type:'DELETE',
            dataType:'json',
            contentType:'application/json',

            success:function(response){
            if(response.success){
                Swal.fire({
                    toast:true,
                    position:'center',
                    icon:'success',
                    title:response.message,
                    showConfirmButton:false,
                    timer:1500,
                    customClass:'center-toast',

                })
                $('#refresh').load('/orderList #refresh');
            }
        },

        error:function(xhr,status,error){
            const response = xhr.responseJSON;
            Swal.fire({
                toast: true,
                position: 'center',
                icon: 'error',
                title: 'Error',
                text:response.message,
                showConfirmButton: false,
                timer: 1500,
                customClass: 'center-toast',
            });
        }

        })
    }
</script>


<script>

let currentReturnOrderId = '';
    let currentReturnProductId = '';

    function returnProduct(event, orderId, productId) {
        event.preventDefault();
        currentReturnOrderId = orderId;
        currentReturnProductId = productId;
        
        const productElement = event.target.closest('.p-4').querySelector('h3');
        const productName = productElement ? productElement.textContent : 'Product';
        
        // Update modal content
        document.getElementById('returnProductName').textContent = productName;
        document.getElementById('returnOrderId').textContent = orderId;
        
        // Show modal
        document.getElementById('returnRequestModal').classList.remove('hidden');
        document.getElementById('returnRequestModal').classList.add('flex');
    }

    function closeReturnModal() {
        document.getElementById('returnRequestModal').classList.add('hidden');
        document.getElementById('returnRequestModal').classList.remove('flex');
        // Reset form
        document.getElementById('returnReason').value = '';
        document.getElementById('returnComments').value = '';
    }

    function submitReturnRequest() {
        const reason = document.getElementById('returnReason').value;
        const comments = document.getElementById('returnComments').value;

        if (!reason) {
            Swal.fire({
                toast: true,
                position: 'center',
                icon: 'warning',
                title: 'Please select a reason for return',
                showConfirmButton: false,
                timer: 1500,
                customClass: 'center-toast',
            });
            return;
        }

        // Call your existing Ajax function with additional data
        $.ajax({
            url: `/returnOrderListProduct/${currentReturnOrderId}/${currentReturnProductId}`,
            type: 'POST',
            dataType: 'json',
            contentType: 'application/json',
            data: JSON.stringify({
                reason: reason,
                comments: comments
            }),
            success: function(response) {
                if (response.success) {
                    closeReturnModal();
                    Swal.fire({
                        toast: true,
                        position: 'center',
                        icon: 'success',
                        title: response.message,
                        showConfirmButton: false,
                        timer: 1500,
                        customClass: 'center-toast',
                    });
                    $('#refresh').load('/orderList #refresh');
                }
            },
            error: function(xhr, status, error) {
                const response = xhr.responseJSON;
                Swal.fire({
                    toast: true,
                    position: 'center',
                    icon: 'error',
                    title: 'Error',
                    text: response.message,
                    showConfirmButton: false,
                    timer: 1500,
                    customClass: 'center-toast',
                });
            }
        });
    }

   
</script>


<script>

function Invoice(event, orderId, productId) {
    event.preventDefault();
    
    // Show loading state
    Swal.fire({
        title: 'Generating Invoice...',
        allowOutsideClick: false,
        didOpen: () => {
            Swal.showLoading();
        }
    });

    // Create a hidden form to handle the download
    const form = document.createElement('form');
    form.method = 'POST';
    form.action = `/invoiceDownload/${orderId}/${productId}`;
    
  

    document.body.appendChild(form);

    // Submit form and handle response
    fetch(form.action, {
        method: 'POST',
        headers: {
            'Accept': 'application/pdf'
        }
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        return response.blob();
    })
    .then(blob => {
        // Create download link
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.style.display = 'none';
        a.href = url;
        a.download = `invoice_${orderId}.pdf`;
        
        // Trigger download
        document.body.appendChild(a);
        a.click();
        
        // Cleanup
        window.URL.revokeObjectURL(url);
        document.body.removeChild(a);
        document.body.removeChild(form);
        
        // Show success message
        Swal.fire({
            toast: true,
            position: 'center',
            icon: 'success',
            title: 'Invoice downloaded successfully',
            showConfirmButton: false,
            timer: 1500,
            customClass: 'center-toast'
        });
    })
    .catch(error => {
        console.error('Error:', error);
        Swal.fire({
            toast: true,
            position: 'center',
            icon: 'error',
            title: 'Error',
            text: 'Failed to download invoice. Please try again.',
            showConfirmButton: false,
            timer: 1500,
            customClass: 'center-toast'
        });
    });
}

</script>





<script>

    function retry(event,totalPrice){
        $.ajax({
            type:'POST',
            url:'/retryPayment/',
            dataType:'json',
            contentType:'application/json',
            data:JSON.stringify({
               totalPrice
                   }),
            success: function (response) {
        if (response.success) {
            if(response.redirectURL){
                window.location.href=response.redirectURL;
            }
        }
      },

      error: function (xhr, status, error) {
        const response = xhr.responseJSON;
        Swal.fire({
          toast: true,
          position: "center",
          icon: "error",
          title: "Error",
          text: response.message,
          showConfirmButton: false,
          timer: 1500,
          customClass: "center-toast",
        });
      },
            
        })
        
    
    }
</script>