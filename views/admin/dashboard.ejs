<%-include('../partials/admin/header')  %>


<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f0f0f0;
        }
        .container {
            display: flex;
            justify-content: space-between;
            gap: 20px;
        }
        .section {
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            flex: 1;
        }
        h2 {
            margin-top: 0;
            margin-bottom: 20px;
        }
        ul {
            list-style-type: none;
            padding: 0;
            margin: 0;
        }
        li {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
        }
    </style>

        <section class="content-main">
            <div class="content-header">
                <div>
                    <h2 class="content-title card-title">Dashboard </h2>
                    <p>Whole data about your business here</p>
                </div>
               
            </div>
            <div class="row">
                <div class="col-lg-3">
                    <div class="card card-body mb-4">
                        <article class="icontext">
                            <span class="icon icon-sm rounded-circle bg-primary-light"><i class="text-primary material-icons md-monetization_on"></i></span>
                            <div class="text">
                                <h6 class="mb-1 card-title">Revenue</h6>
                                <span>Rs:<%= totalRevenue %></span>
                               
                            </div>
                        </article>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="card card-body mb-4">
                        <article class="icontext">
                            <span class="icon icon-sm rounded-circle bg-success-light"><i class="text-success material-icons md-local_shipping"></i></span>
                            <div class="text">
                                <h6 class="mb-1 card-title">Orders</h6> <span><%= order.length %></span>
                               
                            </div>
                        </article>
                    </div>
                </div>
               
                <div class="col-lg-3">
                    <div class="card card-body mb-4">
                        <article class="icontext">
                            <span class="icon icon-sm rounded-circle bg-info-light"><i class="text-info material-icons md-shopping_basket"></i></span>
                            <div class="text">
                                <h6 class="mb-1 card-title">Total Discount</h6> <span>Rs:<%= totalDiscount %></span>
                                
                            </div>
                        </article>
                    </div>
                </div>
            </div>
        
            <div class="flex justify-center gap-4 mb-4">
                <button class="btn btn-primary time-filter active" data-range="daily">Daily (last 10 days)</button>
                <button class="btn btn-primary time-filter" data-range="monthly">Monthly</button>
                <button class="btn btn-primary time-filter" data-range="yearly">Yearly</button>
              </div>


            <div>
                <canvas id="myChart1"></canvas>
              </div>

              
        </section> 
        <body style="margin-bottom: 80px;">

            <div class="container">
                <div class="section">
                    <h2>Best Selling Products</h2>
                    <ul>
                       
                        <% topProducts.forEach(product => { %>
                            <li>
                                <span><%= product.productName %></span>
                                <span><%= product.totalSold %></span>
                                
                            </li>
                        <% }) %>
                    </ul>
                </div>
        
                <div class="section">
                    <h2>Best Selling Categories</h2>
                    <ul>
                      
                        <% topCategories.forEach(category => { %>
                            <li>
                                <span><%= category.name %></span>
                                <span><%= category.totalSold %></span>

                                
                            </li>
                        <% }) %>
                    </ul>
                </div>
        
                <div class="section">
                    <h2>Best Selling Brands</h2>
                    <ul>
                      
                        <% topBrands.forEach(brand => { %>
                            <li>
                                <span><%= brand.brandName %></span>
                                <span><%= brand.totalSold%></span>

                            </li>
                        <% }) %>
                    </ul>
                </div>
            </div>
            
        </body>
        

        <%-include('../partials/admin/footer')  %>

        <script>
            let currentChart = null;
            
            document.addEventListener('DOMContentLoaded', function() {
              // Parse the chart data passed from the server
              const chartData = JSON.parse('<%- chartData %>');
              
              // Function to create/update chart
              const updateChart = (timeRange) => {
  const ctx = document.getElementById('myChart1');

  // Get data for selected time range
  const data = chartData[timeRange];

  // If currentChart is null, create a new chart
  if (!currentChart) {
    currentChart = new Chart(ctx, {
      type: 'bar',
      data: {
        labels: data.labels,
        datasets: [
          {
            label: 'Revenue',
            data: data.revenue,
            backgroundColor: 'rgba(54, 162, 235, 0.5)',
            borderColor: 'rgba(54, 162, 235, 1)',
            borderWidth: 1,
            yAxisID: 'y-revenue'
          },
          {
            label: 'Orders',
            data: data.orders,
            backgroundColor: 'rgba(255, 99, 132, 0.5)',
            borderColor: 'rgba(255, 99, 132, 1)',
            borderWidth: 1,
            yAxisID: 'y-orders'
          }
        ]
      },
      options: {
        responsive: true,
        interaction: {
          intersect: false,
          mode: 'index'
        },
        scales: {
          'y-revenue': {
            type: 'linear',
            position: 'left',
            title: {
              display: true,
              text: 'Revenue (Rs)'
            }
          },
          'y-orders': {
            type: 'linear',
            position: 'right',
            title: {
              display: true,
              text: 'Number of Orders'
            },
            grid: {
              drawOnChartArea: false
            }
          }
        },
        plugins: {
          title: {
            display: true,
            text: `${timeRange.charAt(0).toUpperCase() + timeRange.slice(1)} Revenue and Orders`
          },
          tooltip: {
            callbacks: {
              label: function(context) {
                let label = context.dataset.label || '';
                if (label) {
                  label += ': ';
                }
                if (context.datasetIndex === 0) {
                  label += 'Rs ' + context.parsed.y.toFixed(2);
                } else {
                  label += context.parsed.y;
                }
                return label;
              }
            }
          }
        },
        animation: {  // Add this block for animation
          duration: 1000,  // Animation duration in milliseconds (1000ms = 1s)
          easing: 'easeOutQuart'  // Easing function for smooth transition
        }
      }
    });
  } else {
    // Update the existing chart data
    currentChart.data.labels = data.labels;
    currentChart.data.datasets[0].data = data.revenue;
    currentChart.data.datasets[1].data = data.orders;

    // Update the chart to reflect the new data
    currentChart.update();
  }
};
            
              // Add click event listeners to filter buttons
              document.querySelectorAll('.time-filter').forEach(button => {
                button.addEventListener('click', function() {
                  // Remove active class from all buttons
                  document.querySelectorAll('.time-filter').forEach(btn => {
                    btn.classList.remove('active');
                  });
                  
                  // Add active class to clicked button
                  this.classList.add('active');
                  
                  // Update chart with selected time range
                  updateChart(this.dataset.range);
                });
              });
            
              // Initialize chart with daily data
              updateChart('daily');
            });
            </script>
            
            <style>
            .time-filter {
              padding: 8px 16px;
              border: 1px solid #ddd;
              border-radius: 4px;
              cursor: pointer;
              transition: all 0.3s ease;
            }
            
            .time-filter.active {
              background-color: #4CAF50;
              color: white;
              border-color: #4CAF50;
            }
            
            .time-filter:hover:not(.active) {
              background-color: #f5f5f5;
            }
            </style>